import { Component } from '@angular/core';
import { PopupService } from '../../services/popup.service';
<<<<<<< HEAD
=======
import { ProductService } from '../../services/product.service';  // Th√™m import ProductService
>>>>>>> 7e7feca6fa3c92e6242233d08162b91bde293e42

@Component({
  selector: 'app-navbar',
  standalone: false,
  templateUrl: './navbar.component.html',
  styleUrls: ['./navbar.component.css']
})
export class NavbarComponent {
<<<<<<< HEAD
  constructor(public popupService: PopupService) {}
=======

  // C√°c bi·∫øn v√† thu·ªôc t√≠nh m·ªõi cho category dropdown
  showCategories: boolean = false;
  categories = [
    { name: 'Balo' },
    { name: 'V√≠' },
    { name: 'T√∫i Tote' },
    { name: 'Ph·ª• ki·ªán' }
  ];

  selectedCategory: string | null = null;  // Th√™m thu·ªôc t√≠nh ƒë·ªÉ theo d√µi category ng∆∞·ªùi d√πng ch·ªçn

  constructor(
    public popupService: PopupService,
    private productService: ProductService  // Th√™m constructor cho ProductService
  ) {}
>>>>>>> 7e7feca6fa3c92e6242233d08162b91bde293e42

  get currentPopup() {
    return this.popupService.currentPopup;
  }

  isPopupOpen() {
    return this.popupService.isPopupOpen();
  }

  openPopup(type: string) {
    this.popupService.openPopup(type);
  }

  closePopup() {
    this.popupService.closePopup();
  }

  toggleCart() {
    if (this.popupService.isCartOpen()) {
      console.log('üîπ ƒê√≥ng gi·ªè h√†ng');
      this.closePopup();
    } else {
      console.log('üîπ M·ªü gi·ªè h√†ng');
      this.openPopup('cart');
    }
  }
<<<<<<< HEAD
=======

  // H√†m x·ª≠ l√Ω khi click v√†o m·ªôt category
  onCategoryClick(category: any) {
    this.selectedCategory = category.name;  // C·∫≠p nh·∫≠t category ng∆∞·ªùi d√πng ch·ªçn
    this.getProductsForCategory();
  }

  // H√†m l·∫•y s·∫£n ph·∫©m theo category ho·∫∑c t·∫•t c·∫£ s·∫£n ph·∫©m
  getProductsForCategory() {
    if (this.selectedCategory) {
      // N·∫øu c√≥ category, g·ªçi API ƒë·ªÉ l·∫•y s·∫£n ph·∫©m theo category
      this.productService.getProductsByCategory(this.selectedCategory).subscribe(products => {
        console.log('S·∫£n ph·∫©m theo category:', products);
        // X·ª≠ l√Ω hi·ªÉn th·ªã s·∫£n ph·∫©m theo category
      });
    } else {
      // N·∫øu kh√¥ng c√≥ category (t·ª©c l√† b·∫•m v√†o "S·∫£n ph·∫©m"), g·ªçi API ƒë·ªÉ l·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
      this.productService.getProducts().subscribe(products => {
        console.log('T·∫•t c·∫£ s·∫£n ph·∫©m:', products);
        // X·ª≠ l√Ω hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m
      });
    }
  }

  // H√†m ƒë·ªÉ reset khi b·∫•m v√†o "S·∫£n ph·∫©m"
  onAllProductsClick() {
    this.selectedCategory = null;  // Reset category
    this.getProductsForCategory();  // L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
  }
>>>>>>> 7e7feca6fa3c92e6242233d08162b91bde293e42
}
